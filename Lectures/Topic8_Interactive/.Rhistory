sp500<-read_rds("sp500.rds")
sp500<-readRDS("sp500.rds")
variable_to_select<-"Close"
number_to_select<-20
sector_to_select<-"Information Technology"
gg<-  ## Create a gg plot object
sp500%>% ## start with dataset
filter(sector==sector_to_select,symbol_rank<=number_to_select)%>% ## filter on variables above
ggplot(aes(x=Date,
y=.data[[variable_to_select]], ## Within the function this uses the variable information above
color=company, ## Sets the color for the graphic
))+
geom_point(aes(text=paste0(company,": ", ## Helps us label the result
number(.data[[variable_to_select]],accuracy = .1 )) )) +
geom_smooth(se=FALSE)+
theme(legend.position = "none")
gg # call the object
gg<-  ## Create a gg plot object
sp500%>% ## start with dataset
filter(sector==sector_to_select,symbol_rank<=number_to_select)%>% ## filter on variables above
ggplot(aes(x=Date,
y=.data[[variable_to_select]], ## Within the function this uses the variable information above
color=company, ## Sets the color for the graphic
))+
geom_point(aes(text=paste0(company,": ", ## Helps us label the result
number(.data[[variable_to_select]],accuracy = .1 )) )) +
geom_smooth(se=FALSE)+
theme(legend.position = "none")
gg # call the object
library(tidyverse)
library(tidyquant)
library(scales)
library(plotly)
library(shiny)
library(emojifont)
gg<-  ## Create a gg plot object
sp500%>% ## start with dataset
filter(sector==sector_to_select,symbol_rank<=number_to_select)%>% ## filter on variables above
ggplot(aes(x=Date,
y=.data[[variable_to_select]], ## Within the function this uses the variable information above
color=company, ## Sets the color for the graphic
))+
geom_point(aes(text=paste0(company,": ", ## Helps us label the result
number(.data[[variable_to_select]],accuracy = .1 )) )) +
geom_smooth(se=FALSE)+
theme(legend.position = "none")
gg # call the object
ggplotly(gg)
ggplotly(gg,tooltip = "text")
variable_to_select<-"Percent Change"
number_to_select<-10
sector_to_select<-"Energy"
gg <-
sp500 %>%
filter(sector == sector_to_select,
symbol_rank <= number_to_select) %>%
ggplot(aes(x = Date,
y = .data[[variable_to_select]],
color = company)) +
geom_point(aes(text = paste0(company, ": ",
number(.data[[variable_to_select]], accuracy = .1)))) +
geom_smooth(aes(x = Date,
y = .data[[variable_to_select]],
color = company),
se = FALSE) +
theme(legend.position = "none")
ggplotly(gg, tooltip = "text")
my_function=function(input){output=does_something  output}
dashboard_function <- function(variable_to_select = "Close", ## Default value specified
number_to_select = 25, ## And for the number
sector_to_select = "Information Technology") {   ## Note the open brace
gg <-
sp500 %>%
filter(sector == sector_to_select,
symbol_rank <= number_to_select) %>%
ggplot(aes(x = Date,
y = .data[[variable_to_select]],
color = company)) +
geom_point(aes(text = paste0(
company, ": ",
number(.data[[variable_to_select]], accuracy = .1)
))) +
geom_smooth(aes(x = Date,
y = .data[[variable_to_select]],
color = company),
se = FALSE) +
theme(legend.position = "none")
out <- ggplotly(gg, tooltip = "text")
out
} ## Close the function
dashboard_function()
dashboard_function(sector_to_select = "Energy")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(htmltools)
library(htmlTable)
library(htmlwidgets)
